plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'io.freefair.lombok' version '8.6'
}

group = 'com.github.kejn.rewardcollector'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file('build/generated-snippets'))
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group:'org.springframework.boot', module:'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'org.modelmapper:modelmapper-module-record:1.0.0'
    
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	
	compileOnly 'org.projectlombok:lombok'
	
	runtimeOnly 'com.h2database:h2:2.2.224'
	
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.assertj:assertj-core:3.25.3'
	testImplementation 'org.mockito:mockito-core:5.11.0'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.register('unitTest', Test) {
	group = 'Verification'
	description = 'Run all unit tests'
	
    useJUnitPlatform {
        includeTags 'unit'
    }
    mustRunAfter check
}

tasks.register('integrationTest', Test) {
	group = 'Verification'
	description = 'Run all integration tests'
	
    useJUnitPlatform {
        includeTags 'integration'
    }
    mustRunAfter check
}

tasks.register('apiTest', Test) {
	group = 'Verification'
	description = 'Run all API tests'
	
    useJUnitPlatform {
        includeTags 'api'
    }
    mustRunAfter check
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn apiTest
}
